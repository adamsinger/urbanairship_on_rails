===================
URBAN AIRSHIP ON RAILS
===================

Borrowed Liberally from APN on Rails Gem but designed to interface with urbanairship for simplicity, ease of use, and speedy deployment of push notifications
uses identical data schema to APN.. perhaps allowing future upgrade to APN

=======
DEPENDENCIES
=======
requires JSON gem

=======
HOW TO CONFIGURE
=======

	=====
	Generate migrations for APN data
	
	script/generate apn_migrations
	rake db:migrate
	
	you will then need to create a migration to extend your user model to include device_id
	
	=====
	Create an initializer named urbanairship.rb with the following content

	UA::Config::app_key      = 'YOUR_APP_KEY'
	UA::Config::app_secret   = 'YOUR_APP_SECRET'
	UA::Config::push_secret  = 'YOUR_PUSH_SECRET'

	=====
	Create User => Device relationship

	belongs_to :device, :class_name=>"APN::Device"

	=====
	Set up a daily cron job to clean out inactive device registrations 
		rake apn:feedback or
		script/runner APN:Feedback.new


=======
API CALLS and current support level
=======

REGISTRATION
	
	APN::Device.register 		=> HTTP PUT to /api/device_tokens/<device_token>
	APN::Device.read 			=> HTTP GET to /api/device_tokens/<device_token>
	APN::Device.unregister 		=> HTTP DELETE to /api/device_tokens/<device_token>

PUSH
	APN::Notifcation.push		=> HTTP POST to /api/push/

BATCH PUSH
	NOT YET SUPPORTED

BROADCAST
	NOT YET SUPPORTED

FEEDBACK SERVICE
	APN::Feedback.push(			=> HTTP GET to /api/device_tokens/feedback/?since=<timestamp> 

STATISTICS
	NOT YET SUPPORTED

=======
Example
=======

To Create and register a device
	user.device.create(:token => "token_from_device")
	user.device.register(options_hash) -> see urbanairship api doc for allowed options

To Read device and tags
	user.device.read

To unregister a device
	user.device.unregister

To destroy device record (and unregister)
	user.device.destroy

To create and push notification
	n = APN::Notification.create(:badge=>'', :alert=>'', :sound=>'')
	n.push(options_hash) -> see urbanairship api doc for allowed options



Copyright (c) 2009 [Russell Sherman(code-ronin@code-ronin.com)], released under the MIT license
